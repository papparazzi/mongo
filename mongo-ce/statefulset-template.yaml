apiVersion: v1
data:
  .dockercfg: ${REGISTRY_SECRET}
kind: Secret
metadata:
  name: docker-secret
type: kubernetes.io/dockercfg
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-keyfile-secret
type: Opaque
data:
  keyfile: "${KEYFILE_SECRET}"
---
apiVersion: v1
kind: Service
metadata:
  name: "mongo"
#  annotations:
#    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: "mongo"
  selector:
    app: "mongo"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      imagePullSecrets:
      - name: docker-secret
      terminationGracePeriodSeconds: 10
      volumes:
      - name: mongo-ca
        secret:
          secretName: mongo-ca
      - name: mongo-keyfile-secret
        secret:
          secretName: mongo-keyfile-secret
      containers:
      - name: mongo
        image: ${DOCKER_IMAGE}
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /var/lib/mongodb/data
        - name: mongo-ca
          mountPath: "/stuff/"
          readOnly: true
        - name: mongo-keyfile-secret
          mountPath: "/stuff/keyfile"
          readOnly: true
        env:
          - name: MONGODB_REPLICA_NAME
            value: "rs0"
          - name: SSL_PEM_FILE
            value: "/secret/mongodb.pem"
          - name: SSL_CA_FILE
            value: "/secret/ca.pem"
          - name: MONGODB_KEYFILE
            value: "/secret/keyfile"
          - name: MONGODB_SERVICE_NAME
            value: "mongo"
          - name: MONGODB_ADMIN_PASSWORD
            value: "${ADMIN_PASSWORD}"
        readinessProbe:
          exec:
            command:
              - stat
              - /tmp/initialized
          initialDelaySeconds: 60
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    annotations:
      volume.beta.kubernetes.io/storage-class: "mongodbsc"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "mongodbsc"
      resources:
        requests:
          storage: 100Gi
